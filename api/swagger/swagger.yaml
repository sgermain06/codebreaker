openapi: 3.0.3
info:
  version: 1.0.0
  title: Codebreaker API
  description: This API handles all server operations for Codebreaker
servers:
  - url: http://localhost:5000/api/v1
    variables:
      protocol:
        enum:
          - http
        default: http
tags:
  - name: General
    description: General info about this API
components:
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    defaultEntity:
      type: object
      properties:
        _id:
          type: string
          readOnly: true
        deleted:
          type: boolean
    about:
      type: object
      description: About this API response object
      properties:
        name:
          description: Name of this version
          type: string
        build:
          description: Build number of this version
          type: string
    login:
      type: object
      description: Login request object
      properties:
        username:
          description: Username
          type: string
        password:
          description: Password
          type: string
    vulnerability:
      type: object
      description: Vulnerability object
      properties:
        name:
          description: Name of this vulnerability
          type: string
        description:
          description: Description of this vulnerability
          type: string
        service:
          description: Service this vulnerability belongs to
          type: string
        version:
          description: Version this vulnerability belongs to
          type: string
    loginResponse:
      type: object
      description: Login response object
      properties:
        token:
          description: JWT token
          type: string
    player:
      type: object
      description: Player response object
      properties:
        name:
          description: Name of the player
          type: string
        username:
          description: Username of the player
          type: string
        password:
          description: Password of the player
          type: string
    domain:
      type: object
      description: Domain response object
      properties:
        name:
          description: Name of the domain
          type: string
    subdomain:
      allOf:
        - $ref: '#/components/schemas/defaultEntity'
        - type: object
          description: Domain response object
          properties:
            domain:
              description: Domain ID
              type: string
            name:
              description: Name of the subdomain
              type: string
            ipAddress:
              description: IP Address for the
              type: string
            vulnerabilities:
              description: Vulnerability IDs for this subdomain
              type: array
              items:
                type: string

paths:
  /:
    x-hapi-handler: about
    get:
      summary: About This API
      description: Returns name and build of this API
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/about'
      tags:
        - General

  /security/login:
    x-hapi-handler: login
    post:
      summary: Login
      operationId: apiLogin
      description: This route handles login requests.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/login"
      tags:
        - Security
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/loginResponse"
        400:
          description: Bad Request

  /security/refreshToken:
    x-hapi-handler: login
    get:
      security:
        - jwt: []
      summary: Refresh Token
      operationId: apiRefreshToken
      description: This route handles refresh token requests.
      tags:
        - Security
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/loginResponse"
        403:
          description: Forbidden

  /request:
    x-hapi-handler: http
    get:
      summary: HTTP Request
      description: This route executes an HTTP request.
      parameters:
        - name: url
          description: URL to request
          in: query
          schema:
            type: string
            format: uri
      tags:
        - Proxy
      responses:
        200:
          description: Success
  
  /players:
    x-hapi-handler: players
    get:
      parameters:
        - name: page
          description: Current page
          in: query
          schema:
            default: 1
            type: integer
        - name: size
          description: Size of page
          in: query
          schema:
            default: 10
            type: integer
        - name: search
          description: Search string
          in: query
          schema:
            type: string
      security:
        - jwt: []
      summary: Get Players
      operationId: playersGetAll
      description: This route handles get players requests.
      tags:
        - Players
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalRecords:
                    type: integer
                  records:
                    type: array
                    items:
                      $ref: '#/components/schemas/player'
        400:
          description: Bad Request
        403:
          description: Forbidden
    post:
      security:
        - jwt: []
      summary: Create Player
      operationId: playerCreate
      description: This route handles create player requests.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/player'
      tags:
        - Players
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/player'
        400:
          description: Bad Request
        403:
          description: Forbidden

  /players/{id}:
    x-hapi-handler: players
    parameters:
      - name: id
        in: path
        description: id to get vulnerabilities for
        required: true
        schema:
          type: string
    get:
      security:
        - jwt: []
      summary: Get Player details
      description: This route handles get players requests.
      operationId: playerDetails
      tags:
        - Players
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/player'
        400:
          description: Bad Request
        403:
          description: Forbidden
    put:
      security:
        - jwt: []
      summary: Update Player
      operationId: playerUpdate
      description: This route handles update player requests.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/player'
      tags:
        - Players
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/player'
        400:
          description: Bad Request
        403:
          description: Forbidden
    delete:
      security:
        - jwt: []
      summary: Delete Player details
      description: This route handles delete players requests.
      operationId: playerDelete
      tags:
        - Players
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
        403:
          description: Forbidden
  
  /vulnerabilities:
    x-hapi-handler: vulnerabilities
    get:
      parameters:
        - name: page
          description: Current page
          in: query
          schema:
            default: 1
            type: integer
        - name: size
          description: Size of page
          in: query
          schema:
            default: 10
            type: integer
        - name: search
          description: Search string
          in: query
          schema:
            type: string
      security:
        - jwt: []
      summary: Get Vulnerabilities
      operationId: vulnerabilitiesGetAll
      description: This route handles get vulnerabilities requests.
      tags:
        - Vulnerabilities
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalRecords:
                    type: integer
                  records:
                    type: array
                    items:
                      $ref: '#/components/schemas/vulnerability'
        400:
          description: Bad Request
        403:
          description: Forbidden
    post:
      security:
        - jwt: []
      summary: Create Vulnerability
      operationId: vulnerabilityCreate
      description: This route handles create vulnerability requests.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vulnerability'
      tags:
        - Vulnerabilities
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vulnerability'
        400:
          description: Bad Request
        403:
          description: Forbidden

  /vulnerabilities/{id}:
    x-hapi-handler: vulnerabilities
    parameters:
      - name: id
        in: path
        description: id to get vulnerabilities for
        required: true
        style: simple
        schema:
          type: string
    get:
      security:
        - jwt: []
      summary: Get Vulnerability details
      description: This route handles get vulnerabilities requests.
      operationId: vulnerabilityDetails
      tags:
        - Vulnerabilities
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vulnerability'
        400:
          description: Bad Request
        403:
          description: Forbidden
    put:
      security:
        - jwt: []
      summary: Update Vulnerability
      operationId: vulnerabilityUpdate
      description: This route handles update vulnerability requests.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vulnerability'
      tags:
        - Vulnerabilities
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vulnerability'
        400:
          description: Bad Request
        403:
          description: Forbidden

  /vulnerabilities/service/{service}:
    x-hapi-handler: vulnerabilities
    parameters:
      - name: service
        in: path
        description: Service to get vulnerabilities for
        required: true
        schema:
          type: string
    get:
      parameters:
        - name: page
          description: Current page
          in: query
          schema:
            default: 1
            type: integer
        - name: size
          description: Size of page
          in: query
          schema:
            default: 10
            type: integer
        - name: version
          description: Service version
          in: query
          schema:
            type: string
      security:
        - jwt: []
      summary: Get Vulnerabilities
      description: This route handles get vulnerabilities requests.
      operationId: vulnerabilitiesGetByService
      tags:
        - Vulnerabilities
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/vulnerability'
        400:
          description: Bad Request
        403:
          description: Forbidden

  /domains:
    x-hapi-handler: domains
    get:
      parameters:
        - name: page
          description: Current page
          in: query
          schema:
            default: 1
            type: integer
        - name: size
          description: Size of page
          in: query
          schema:
            default: 10
            type: integer
        - name: search
          description: Search string
          in: query
          schema:
            type: string
      security:
        - jwt: []
      summary: Get Domains
      operationId: domainsGetAll
      description: This route handles get domains requests.
      tags:
        - Domains
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalRecords:
                    type: integer
                  records:
                    type: array
                    items:
                      $ref: '#/components/schemas/domain'
        400:
          description: Bad Request
        403:
          description: Forbidden
    post:
      security:
        - jwt: []
      summary: Create Domain
      operationId: domainCreate
      description: This route handles create domain requests.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/domain'
      tags:
        - Domains
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain'
        400:
          description: Bad Request
        403:
          description: Forbidden

  /domains/{id}:
    x-hapi-handler: domains
    parameters:
      - name: id
        in: path
        description: id to get domains for
        required: true
        style: simple
        schema:
          type: string
    get:
      security:
        - jwt: []
      summary: Get Domain details
      description: This route handles get domains requests.
      operationId: domainDetails
      tags:
        - Domains
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain'
        400:
          description: Bad Request
        403:
          description: Forbidden
    put:
      security:
        - jwt: []
      summary: Update Domain
      operationId: domainUpdate
      description: This route handles update domain requests.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/domain'
      tags:
        - Domains
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/domain'
        400:
          description: Bad Request
        403:
          description: Forbidden

  /subdomains:
    x-hapi-handler: subdomains
    get:
      parameters:
        - name: page
          description: Current page
          in: query
          schema:
            default: 1
            type: integer
        - name: size
          description: Size of page
          in: query
          schema:
            default: 10
            type: integer
        - name: search
          description: Search string
          in: query
          schema:
            type: string
      security:
        - jwt: []
      summary: Get Subdomains
      operationId: subdomainsGetAll
      description: This route handles get subdomains requests.
      tags:
        - Subdomains
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalRecords:
                    type: integer
                  records:
                    type: array
                    items:
                      $ref: '#/components/schemas/subdomain'
        400:
          description: Bad Request
        403:
          description: Forbidden
    post:
      security:
        - jwt: []
      summary: Create Subdomain
      operationId: subdomainCreate
      description: This route handles create subdomain requests.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subdomain'
      tags:
        - Subdomains
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subdomain'
        400:
          description: Bad Request
        403:
          description: Forbidden

  /subdomains/{id}:
    x-hapi-handler: subdomains
    parameters:
      - name: id
        in: path
        description: id to get subdomains for
        required: true
        style: simple
        schema:
          type: string
    get:
      security:
        - jwt: []
      summary: Get Subdomain details
      description: This route handles get subdomains requests.
      operationId: subdomainsDetails
      tags:
        - Subdomains
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subdomain'
        400:
          description: Bad Request
        403:
          description: Forbidden
    put:
      security:
        - jwt: []
      summary: Update Subdomain
      operationId: subdomainsUpdate
      description: This route handles update subdomains requests.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subdomain'
      tags:
        - Subdomains
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subdomain'
        400:
          description: Bad Request
        403:
          description: Forbidden

  /subdomains/ipAddress/{ipAddress}:
    x-hapi-handler: subdomains
    parameters:
      - name: ipAddress
        in: path
        description: ipAddress to get subdomain for
        required: true
        schema:
          type: string
    get:
      parameters:
        - name: page
          description: Current page
          in: query
          schema:
            default: 1
            type: integer
        - name: size
          description: Size of page
          in: query
          schema:
            default: 10
            type: integer
        - name: search
          description: Search string
          in: query
          schema:
            type: string
      security:
        - jwt: []
      summary: Get Subdomains
      description: This route handles get subdomains requests.
      operationId: subdomainsGetByIpAddress
      tags:
        - Subdomains
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/subdomain'
        400:
          description: Bad Request
        403:
          description: Forbidden
